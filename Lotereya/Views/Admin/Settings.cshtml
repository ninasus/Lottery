@model Lotereya.Models.settings

@{
    ViewBag.Title = "Settings";
}

<h2>Settings</h2>
@if (ViewData["Error"] != null)
{
    @ViewData["Error"]
}

@if (ViewData["Info"] != null)
{
    @ViewData["Info"]
}


@using (Html.BeginForm("LogOff", "Admin", FormMethod.Post, new { id = "logoutForm" }))
{
    @Html.AntiForgeryToken()

    <a href="javascript:document.getElementById('logoutForm').submit()">
        <i class="fa fa-sign-out"></i>
       Выход
    </a>
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>settings</h4>
        <hr />
        @Html.ValidationSummary(true)


        @Html.HiddenFor(model => model.id_settings)



        <div class="form-group">
            @Html.LabelFor(model => model.timeBeforeDraw, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.timeBeforeDraw)
                @Html.ValidationMessageFor(model => model.timeBeforeDraw)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.timeDraw, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.timeDraw)
                @Html.ValidationMessageFor(model => model.timeDraw)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.timeAfterDraw, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.timeAfterDraw)
                @Html.ValidationMessageFor(model => model.timeAfterDraw)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.minValue, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.minValue)
                @Html.ValidationMessageFor(model => model.minValue)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.maxValue, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.maxValue)
                @Html.ValidationMessageFor(model => model.maxValue)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.minJackPot, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.minJackPot)
                @Html.ValidationMessageFor(model => model.minJackPot)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stepJackPot, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stepJackPot)
                @Html.ValidationMessageFor(model => model.stepJackPot)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.countValue, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.countValue)
                @Html.ValidationMessageFor(model => model.countValue)
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Зберегти" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="lotterDiv">
    @Html.Partial("LotterPartial", 0)
</div>

<div id="winnerDiv">

</div>

<div id="articleDiv">

</div>


@section Scripts {

    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    <script>
        $(function () {

            $("#articleDiv").load("/admin/ArticlePartial");


            $("#winnerDiv").load("/admin/WinnersPartial");


        });
    </script>
}
