@model Lotereya.Models.settings

@{
    ViewBag.Title = "Бесплатная онлайн лотерея";
}

<header id="header" class="clearfix">
    <div class="container">
        <div class="row">
            <div class="col-xs-4">
                @Html.Partial("SelectedElementsPartial", Model.countValue)
            </div>
            <div class="col-xs-4">
                <div id="logo">
                    <span>Бесплатная</span> онлайн лотерея
                    <div class="balls"></div>
                </div>
            </div>
            <div class="col-xs-4">
                @Html.Partial("PriceElementsPartial", Model.countValue)
            </div>
        </div>
    </div>
</header>

<div id="content">
    <div id="field" class="container">
        @Html.Partial("WorkFieldPartial", new Tuple<int, int>(Model.minValue, Model.maxValue))
    </div>
</div>

@section scripts {

    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            var chat = $.connection.timing;

            chat.client.secondIs = function (type,tick) {
                var element = $('.clock');

                if(type==1)
                {
                    $('.time_to_draw').empty().append(htmlEncode(tick));

                    if(element.length>0)
                        $('.clock').empty().append(htmlEncode(tick));
                }
                else
                {
                    if(element.length>0)
                        $('.clock').closest('#progress').html(htmlEncode("Идет обработка данных..."));
                }
            }

            chat.client.SendCount = function (count) {
                $('.now_play').empty().append(count);
            }
                       
            chat.client.endDraw = function (){
                location.reload();
            }

            chat.client.startDraw = function (){
                location.reload();
                $('.sum').empty().append(" $");
            }

            chat.client.SendJackPot = function (count) {
                var element = $('.sum');
                isJackPotPush = true;
                var JackPot=count;

                if(element.length>0)
                {
                    element.empty().append(count+" $");
                }
            }

            chat.client.drawResult=function(thereWinners,isWinner,priceElements,id_draw)
            {

                if ($('#waiting').length > 0)
                {
                    var elements = $("#priceElements .elementSel");
                    
                    $("#field").load("/Home/ResultPartial?thereWinners=" + thereWinners + "&isWinner=" + isWinner, function() {
                        var form = $(".price-form");
                        
                        $('#modal_winner').modal('show');
                        
                        if(form.length > 0)
                        {
                            form.find("#id_draw").val(id_draw);
                        }
                        else
                        {
                            $(".play-new").on('click', function() {
                                location.reload();
                            });
                        }
                    });
                
                    $(priceElements).each(function(index,value){
                        $(elements[index]).text(value);
                    });
                }
            }

            $.connection.hub.start().done(function () {
                //chat.server.timer();

                chat.server.getCount();

                chat.server.getJackPot();
                /*$('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });*/
            });

            
            /*****************************************/
            var request = function(url, params){
                var result = $.ajax({
                    url:url,
                    contentType: "application/json; charset=utf-8",
                    data: params,
                    type: "GET",
                    async: false,
                    success: function(json){
                        return json;
                    }
                });

                return result.responseJSON;
            };

            var cellNumber = 0;
            var selectedElements = [];

            $(".element").click(function () {
                if ($(this).hasClass("selectedElement")) {
                    $(this).removeClass("selectedElement");
                    $("#play").attr("disabled","disabled");


                    var data = { element: $(this).text() };
                    var result = request("/Home/RemoveElement",data);
                    if (result)
                    {
                        cellNumber = cellNumber - 1;
                        var valRemove = $(this).text();

                        selectedElements = $.grep(selectedElements,function(value){
                            return value!=valRemove;
                        });

                        $("#selectedElements span").each(function(index,value){
                            if($(value).text().trim()==valRemove.trim())
                            {
                                $(value).remove();
                                $("#selectedElements").append("<span class='elementSel'></span>");
                                return;
                            }
                        });
                    }

                } else {
                    if (cellNumber < (@Model.countValue))
                    {
                        var data = { element: $(this).text(), number: cellNumber, count: @Model.countValue };
                        var result = request("/Home/AddElement",data);
                        if (result)
                        {
                            $(this).addClass("selectedElement");
                            selectedElements[cellNumber] = $(this).text();
                            cellNumber = cellNumber + 1;
                            $("#selectedElements").find("span:nth-child("+(cellNumber)+")").text($(this).text());

                           
                            if((cellNumber==(@Model.countValue))&&(@Convert.ToInt32(Lotereya.Models.LotTimer.IsStoped())==false))
                                $("#play").removeAttr("disabled");
                        }

                    }
                }
            });


            $("#reset").click(function() {
                var result = request("/Home/ClearElement",{});
                if (result)
                {
                    $("#selectedElements span").text("");
                    $(".element").removeClass("selectedElement");
                    $("#play").attr("disabled","disabled");
                    cellNumber = 0;
                }
            });

            $("#play").click(function(){
                $("#field").load("/Home/GamePartial", function(){
                    chat.server.beginPlay(selectedElements);
                });
            });

            $("#autoSelect").click(function(){
                //var result = request("/Home/ClearElement",{});
                //if (result)
                //{
                //    $("#selectedElements span").text("");
                //    $(".element").removeClass("selectedElement");
                //    $("#play").attr("disabled","disabled");
                //    cellNumber = 0;
                //}
                var data = { min: @Model.minValue, max: @Model.maxValue, count: @Model.countValue };
                var result = request("/Home/AutoElements",data);
                cellNumber = 0;
                $(".selectedElement").removeClass("selectedElement");
                $(result).each(function(index,value){
                    selectedElements[cellNumber] = result[cellNumber];

                    $("#selectedElements").find("span:nth-child("+(cellNumber+1)+")").text(result[cellNumber]);
                    $(".element[data-id="+result[cellNumber]+"]").addClass("selectedElement");

                    cellNumber = cellNumber + 1;
                });

                if((cellNumber==(@Model.countValue))&&(@Convert.ToInt32(Lotereya.Models.LotTimer.IsStoped())==false))
                    $("#play").removeAttr("disabled");
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
